# --------------------------------------------------------------------------------------------------
# DEVELOPMENT docker-compose.
# --------------------------------------------------------------------------------------------------

version: "3.9"

networks:
  default:

secrets:
  jwt_token:
    file: ./secrets/jwt_token

services:
  # ---------------------- Node web app ---------------------- #
  node:
    container_name: "ethicapp-node"
    build:
      context: ethicapp/
      args:
        NODE_VERSION: ${NODE_VERSION}
    secrets:
      - jwt_token
    env_file:
      - .env
    environment:
      NODE_ENV: development
      NODE_PORT: ${NODE_PORT}
      ETHICAPP_DOMAIN_NAME: ${ETHICAPP_DOMAIN_NAME}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      REDIS_HOST: redis
      CONTENT_ANALYSIS_HOST_NAME: ${CONTENT_ANALYSIS_HOST_NAME}
      CONTENT_ANALYSIS_PORT: ${CONTENT_ANALYSIS_PORT}
      ETHICAPP_HOSTNAME: ${ETHICAPP_HOSTNAME}
      CONTENT_ANALYSIS_API_KEY: ${CONTENT_ANALYSIS_API_KEY}
      CONTENT_ANALYSIS_SERVICE: ${CONTENT_ANALYSIS_SERVICE}
    restart: "no"
    networks:
      default:
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
      - "${NODE_DEBUG_PORT}:${NODE_DEBUG_PORT}"
    volumes:
      - "./ethicapp:/home/app:rw"
    depends_on:
      - redis
      - postgres

 # ---------------------- Admin Panel ---------------------- #
  admin-panel:
    container_name: "ethicapp-admin-panel"
    build:
      context: admin-panel/
      args:
        REACT_APP_API_PORT: ${NODE_PORT}
        REACT_APP_DOMAIN: ${ETHICAPP_DOMAIN_NAME}
    ports:
      - "3000:3000"
    networks:
      default:
    depends_on:
      - node
      - redis

  # ---------------------- Redis Cache Server ---------------------- #
  redis:
    image: redis
    container_name: "ethicapp-redis"
    ports:
      - "6379:6379"

  # ---------------------- Database ---------------------- #
  postgres:
    image: postgres:${POSTGRES_VERSION}
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - "${HOST_DB_VOLUME_PATH}:/var/lib/postgresql/data:rw"
      - ./postgres-db/schema:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  postgres_init:
    image: postgres:${POSTGRES_VERSION}
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    depends_on:
      - postgres
    volumes:
      - "${HOST_DB_VOLUME_PATH}:/var/lib/postgresql/data:rw"
      - ./postgres-db/seeds/development:/seeds
      - ./postgres-db/scripts:/scripts
    entrypoint: ["sh", "-c", "/scripts/seeds.sh"]


  # ---------------------- PGAdmin ---------------------- #
  # pgadmin:
  #   container_name: "ethicapp-pgadmin"
  #   build:
  #     context: pgadmin/
  #     args:
  #       PGADMIN_VERSION: ${PGADMIN_VERSION}
  #       POSTGRES_CONN_PORT: 5432
  #       POSTGRES_CONN_USER: ${DB_USER_NAME}
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   restart: unless-stopped
  #   networks:
  #     default:
  #   ports:
  #     - "${PGADMIN_PORT}:80"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

volumes:
  postgres_data:
    driver: local
