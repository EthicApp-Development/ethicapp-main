# --------------------------------------------------------------------------------------------------
# PRODUCTION docker-compose.
# --------------------------------------------------------------------------------------------------

version: "3.9"

networks:
  default:

secrets:
  jwt_token:
    file: ./secrets/jwt_token
  keys-n-secrets.js:
    file: ./secrets/keys-n-secrets.js

services:
  # ---------------------- Node web app ---------------------- #
  node:
    build:
      context: ethicapp/
      dockerfile: production.Dockerfile
    environment:
      NODE_ENV: release
      NODE_PORT: ${NODE_PORT}
      ETHICAPP_DOMAIN_NAME: ${ETHICAPP_DOMAIN_NAME}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      REDIS_HOST: redis
    restart: "no"
    networks:
      default:
    secrets:
      - jwt_token
      - keys-n-secrets.js
    volumes:
      - shared-volume:/home/app:rw
    depends_on:
      - redis
      - postgres

  # ---------------------- Redis Cache Server ---------------------- #
  redis:
    image: redis

  # ---------------------- Admin Panel ---------------------- #
  admin-panel:
    build:
      context: admin-panel/
      dockerfile: production.Dockerfile
      args:
        REACT_APP_API_PORT: ${NGINX_PORT}
        REACT_APP_DOMAIN: ${ETHICAPP_DOMAIN_NAME}
    volumes:
      - shared-volume-admin:/home/app:rw
        
  # ---------------------- Nginx ---------------------- #
  nginx:
    build:
      context: web-nginx/
    ports:
      - "${NGINX_PORT}:80"
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      NODE_PORT: ${NODE_PORT}
      NODE_SERVER: node
    networks:
      default:
    volumes:
      - shared-volume:/usr/share/nginx/:rw
      - shared-volume-admin:/usr/share/nginx/admin:rw
    depends_on:
      - node
      - admin-panel
  
  # ---------------------- Database ---------------------- #
  postgres:
    build:
      context: postgres-db/
      args:
        UBUNTU_VERSION: "22.04"
        POSTGRES_VERSION: ${POSTGRES_VERSION}
        DB_NAME: ${DB_NAME}
        DB_USER_NAME: ${DB_USER_NAME}
        DB_USER_PASSWORD: ${DB_USER_PASSWORD}
    environment:
      POSTGRES_LOG_LEVEL: 1
      PGPORT: 5432
      PGDATA: /var/lib/postgresql/${POSTGRES_VERSION}/main
    restart: unless-stopped
    networks:
      default:
    healthcheck:
      test: ["CMD-SHELL", "su healthcheckuser -c pg_isready"]
      interval: 20s
      timeout: 5s
      retries: 1
      start_period: 10s
    #* Do not modify this volume declaration, as the automated initialization of the volume mount
    #* will break if not updated as well
    volumes:
      - "${HOST_DB_VOLUME_PATH}:/var/lib/postgresql/${POSTGRES_VERSION}/main:rw"

volumes:
  shared-volume:
  shared-volume-admin: